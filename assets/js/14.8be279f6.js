(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{554:function(i,t,a){"use strict";a.r(t);var s=a(31),v=Object(s.a)({},(function(){var i=this,t=i.$createElement,a=i._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[i._v("浏览器汇总")])]),i._v(" "),a("h1",{attrs:{id:"dns-解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns-解析"}},[i._v("#")]),i._v(" DNS 解析")]),i._v(" "),a("p",[i._v("域名解析是一个递归查询 + 迭代查询的过程。")]),i._v(" "),a("ol",[a("li",[i._v("浏览器缓存，向浏览器的缓存中读取上一次的访问记录")]),i._v(" "),a("li",[i._v("操作系统的缓存，查找存储在系统运行内存中的缓存")]),i._v(" "),a("li",[i._v("在 host 文件中查找")]),i._v(" "),a("li",[i._v("路由器缓存：有些路由器会把访问过的域名存在路由器上")]),i._v(" "),a("li",[i._v("ISP 互联网服务提供商缓存，比如 114.114.114.114，")]),i._v(" "),a("li",[i._v("缓存中找不到，则本地 DNS 服务器进行迭代查询：. 根 DNS 服务器 -> .com 顶级服务器 -> 主域名服务器 -> ...，直到服务器返回对应的 IP")])]),i._v(" "),a("h1",{attrs:{id:"三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[i._v("#")]),i._v(" 三次握手")]),i._v(" "),a("ol",[a("li",[i._v("第一次：客户端发送 SYN 包和初始序号 seq = x 给服务端，此时客户端状态为 SYN-SENT")]),i._v(" "),a("li",[i._v("第二次：服务端收到 SYN 包后，将标识位 SYN 和 ACK 置为 1，确认序号 ack = x + 1, 初始序号 seq = y 发送给客户端，此时服务端状态为 SYN-RECEIVED")]),i._v(" "),a("li",[i._v("第三次：客户端收到后，将标识位 ACK 置为 1, 确认序号 ack = y + 1, 自己的序号 seq = x + 1, 发送给服务端，服务端收到后也将状态切换为 ESTABLISHED")])]),i._v(" "),a("h1",{attrs:{id:"四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[i._v("#")]),i._v(" 四次挥手")]),i._v(" "),a("ol",[a("li",[i._v("第一次：客户端主动关闭放发送一个 FIN，用来关闭客户端到服务端的数据传输，告诉服务端我不会给你发送数据了")]),i._v(" "),a("li",[i._v("第二次：服务端收到 FIN 包后，发送一个 ACK 给客户端，确认序号为收到序号 + 1")]),i._v(" "),a("li",[i._v("第三次：服务端发送完数据后，服务端发送一个 FIN，用来关闭服务端到客户端的数据传输，告诉客户端我不会给你发数据了")]),i._v(" "),a("li",[i._v("第四次：客户端收到 FIN 后，发送一个 ACK 给服务端，确认序号为收到序号 + 1，完成四次挥手")])]),i._v(" "),a("h1",{attrs:{id:"last-modified-和-if-modified-since"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-和-if-modified-since"}},[i._v("#")]),i._v(" Last-Modified 和 If-Modified-Since")]),i._v(" "),a("ol",[a("li",[i._v("Last_Modified 表示本地文件的最后修改时间，If-Modified-Since 会将 Last-Modified 的值发送给服务器询问该资源是否有更新，如果有更新就会将新的资源发送回来，否则返回 304 状态码，代表资源无更新，继续使用缓存文件。")]),i._v(" "),a("li",[i._v("如果文件只是被打开，没有修改，也会造成 Last-Modified 修改，服务器不能命中缓存。")]),i._v(" "),a("li",[i._v("只能以秒计时，如果在毫秒级的时间内修改了文件，服务器 Last-Modified 的值并不会修改，会返回 304，浏览器就会是自己的缓存。")])]),i._v(" "),a("h1",{attrs:{id:"etag-和-if-no-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etag-和-if-no-match"}},[i._v("#")]),i._v(" ETag 和 If-No-Match")]),i._v(" "),a("ul",[a("li",[i._v("ETag 是文件指纹，If-No-Match 会将 ETag 发送给服务器，查询该资源 ETag 是否变动，有变动的话就将新的资源发送回来。ETag 优先级高于 Last-Modified。")])]),i._v(" "),a("Valine")],1)}),[],!1,null,null,null);t.default=v.exports}}]);