(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{526:function(t,e,l){"use strict";l.r(e);var v=l(31),i=Object(v.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("div",{staticClass:"custom-block tip"},[l("p",[t._v("Vue init 的时候都发生了什么")])]),t._v(" "),l("ol",[l("li",[l("p",[t._v("处理组件配置项")])]),t._v(" "),l("li",[l("p",[t._v("初始化组件实例的关系属性，比如 $parent、$children、$root、$refs 等")])]),t._v(" "),l("li",[l("p",[t._v("处理自定义事件")])]),t._v(" "),l("li",[l("p",[t._v("调用 beforeCreate 钩子函数")])]),t._v(" "),l("li",[l("p",[t._v("初始化组件的 inject 配置项，得到 ret[key] = val 形式的配置对象，然后对该配置对象进行响应式处理，并代理每个 key 到 vm 实例上")])]),t._v(" "),l("li",[l("p",[t._v("数据响应式，处理 props、methods、data、computed、watch 等选项")])]),t._v(" "),l("li",[l("p",[t._v("解析组件配置项上的 provide 对象，将其挂载到 vm._provided 属性上")])]),t._v(" "),l("li",[l("p",[t._v("调用 created 钩子函数")])]),t._v(" "),l("li",[l("p",[t._v("如果发现配置项上有 el 选项，则自动调用 $mount 方法，也就是说有了 el 选项，就不需要再手动调用 $mount 方法，反之，没提供 el 选项则必须调用 $mount")])]),t._v(" "),l("li",[l("p",[t._v("接下来则进入挂载阶段")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);